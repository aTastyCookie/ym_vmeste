<?php
class Application_Model_DbTable_Action extends Ymoney_Db_Table
{
    protected $_name = 'action';
    protected $_primary = 'id';

	public function getActions($user_id = null, $top = null, $drafts = null, $new = null, $search = null, $hidden = null, 
	$blocked = null, $pop = null, $limit = null, $offset = null, $onlyuseractions = null, $completed = null)
    {
        $rowArr = array();

        $sql = $this->select()
        	->setIntegrityCheck(false)
            ->from(array('a' => $this->getTableName()))
            ->joinInner(array('u' => 'ym_users'), 
            'u.id = a.user_id',
            array('Username' => 'u.name', 'Firstname' => 'u.firstname', 'Lastname' => 'u.lastname', 'Userurl' => 'u.url'));
            

        if($user_id && !$onlyuseractions) {
        	 $sql->where('a.user_id = ?', $user_id);
        	 if(!$drafts) {
        	 	$sql->where('a.draft = ?', 'N');
        	 } else {
        	 	$sql->where('a.draft = ?', 'Y');
        	 }
        	if(!$blocked) {
        	 	$sql->where('a.blocked = ?', 'N');
        	 } else {
        	 	$sql->where('a.blocked = ?', 'Y');
        	 }
        }  elseif($user_id && $onlyuseractions) {
        	$sql->where('a.user_id = ?', $user_id);
        }
        if($hidden) {
        	$sql->where('a.hidden = ?', 'Y')
        	->where('a.blocked = ?', 'N');
        } 
        if($blocked) {
        	$sql->where('a.hidden = ?', 'N')
        	->where('a.blocked = ?', 'Y');
        } 
        
        if (!$blocked && !$hidden && !$user_id && !$drafts && !$completed && !$onlyuseractions) {
        	$sql->where('a.completed = ?', 'N')
            ->where('a.draft = ?', 'N')
            ->where('a.hidden = ?', 'N')
            ->where('a.blocked = ?', 'N')
            ->where('UNIX_TIMESTAMP(a.date_start) <= ?', mktime());
        }
        
    	if($pop) {
        	$sql->order('a.all_sum DESC');
        	$sql->order('UNIX_TIMESTAMP(a.date_start) DESC')
        	->order('UNIX_TIMESTAMP(a.date_modified) DESC')
        	->where('a.all_sum > 0');
        } else {
        	$sql->order('UNIX_TIMESTAMP(a.date_start) DESC')
        	->order('UNIX_TIMESTAMP(a.date_modified) DESC');
        }
        
        if($completed) {
        	$sql->where('a.completed = ?', 'Y');
        } else {
        	$sql->where('a.completed = ?', 'N');
        }
        
    	if($drafts) {
        	$sql->where('a.draft = ?', 'Y');
        }
        
    	if($new) {
        	$sql->where('a.date_created >= ?', date('Y-m-d H:i:s', (mktime()-86400)));
        }
        
        if($top) {
        	$sql->where('a.top = ?', 'Y');
        }
        
        if($search) {
        	$sql->where("a.tags LIKE '%".$search."%' OR a.name LIKE '%".$search."%' OR a.description LIKE '%".$search."%'");
        }
        
    	if($offset){
        	$sql->limit($limit, $offset);
        }
        
        if($limit && !$offset){
        	$sql->limit($limit);
        }
        /*echo "<!--";
        echo $sql->__toString();
        echo "-->\n";*/
        //echo $sql->__toString();
        $rows = $this->fetchAll($sql);
        if ($rows) {
            $rowArr = $rows->toArray();
        }

        return $rowArr;
    }
    
	public function getAllActions()
    {
        $rowArr = array();

        $sql = $this->select()
        	->setIntegrityCheck(false)
            ->from(array('a' => $this->getTableName()))
            ->joinInner(array('u' => 'ym_users'), 
            'u.id = a.user_id',
            array('Username' => 'u.name', 'Firstname' => 'u.firstname', 'Lastname' => 'u.lastname', 'Userurl' => 'u.url'));
            
        $rows = $this->fetchAll($sql);
        if ($rows) {
            $rowArr = $rows->toArray();
        }

        return $rowArr;
    }

	public function getAction($id)
    {
        $rowArr = array();

        $sql = $this->select()
        	->setIntegrityCheck(false)
            ->from(array('a' => $this->getTableName()))
            ->joinInner(array('u' => 'ym_users'), 
            'u.id = a.user_id',
            array('Username' => 'u.name', 'Firstname' => 'u.firstname', 'Lastname' => 'u.lastname', 'Userurl' => 'u.url'))
            ->where('a.id = ?', $id)
            ->limit(1);

        $rows = $this->fetchAll($sql);
        if ($rows) {
            $rowArr = $rows->toArray();
        }

        return $rowArr[0];
    }
    
    public function getTokenByUser($userid)
    {
    	$result = false;
    	if($userid) {
    		 $sql = $this->select()
	        	->setIntegrityCheck(false)
	            ->from(array('a' => $this->getTableName()), array('token'=>'a.token'))
	            ->where('a.user_id = ?', $userid)
	            ->where('a.token IS NOT NULL')
	            ->order('UNIX_TIMESTAMP(a.date_modified)')
	            ->limit(1);
//echo $sql->__toString();
        	$rows = $this->fetchAll($sql);
	    	if ($rows) {
	            $rowArr = $rows->toArray();
		    	if(strlen($rowArr[0]['token'])>5) {
		        	$result = $rowArr[0]['token'];
		        }
	        }	        
    	}
//    	exit;
    	return $result;
    }

	public function getActionsWithToken()
    {
        $rowArr = array();

        $sql = $this->select()
        	->setIntegrityCheck(false)
            ->from(array('a' => $this->getTableName()));           

        $sql->where('a.completed = ?', 'N')
            ->where('a.draft = ?', 'N')
            ->where('a.blocked = ?', 'N')
            ->where('a.token IS NOT NULL');
            
        $rows = $this->fetchAll($sql);
        if ($rows) {
            $rowArr = $rows->toArray();
        }

        return $rowArr;
    }
	
    public function getDayActions()
    {
    	$rowArr = array();

        $sql = $this->select()
            ->from(array('a' => $this->getTableName()));           

        $sql->where('a.date_created >= ?', date('Y-m-d H:i:s', (mktime()-86400)));
            
        $rows = $this->fetchAll($sql);
        if ($rows) {
            $rowArr = $rows->toArray();
        }

        return $rowArr;
    }
    
	public function getWeekActions()
    {
    	$rowArr = array();

        $sql = $this->select()
            ->from(array('a' => $this->getTableName()));           

        $sql->where('a.date_created >= ?', date('Y-m-d 00:00:01', (mktime()-86400*7)));
            
        $rows = $this->fetchAll($sql);
        if ($rows) {
            $rowArr = $rows->toArray();
        }

        return $rowArr;
    }

	public function getMonthActions()
    {
    	$rowArr = array();

        $sql = $this->select()
            ->from(array('a' => $this->getTableName()));           

        $sql->where('a.date_created >= ?', date('Y-m-d 00:00:01', (mktime()-86400*30)));
            
        $rows = $this->fetchAll($sql);
        if ($rows) {
            $rowArr = $rows->toArray();
        }

        return $rowArr;
    }
    
	public function getDayPayments()
    {
    	$rowArr = array();
    	$result = 0;
        $sql = $this->select()
            ->from(array('a' => $this->getTableName()), array('payments'=>'daystat'));                        
        $rows = $this->fetchAll($sql);
        if ($rows) {
            $rowArr = $rows->toArray();
            foreach($rowArr as $row) {
            	$result += $row['payments'];
            }
        }
        return $result;
    }
	public function getWeekPayments()
    {
    	$rowArr = array();
    	$result = 0;
        $sql = $this->select()
            ->from(array('a' => $this->getTableName()), array('payments'=>'weekstat'));                        
        $rows = $this->fetchAll($sql);
        if ($rows) {
            $rowArr = $rows->toArray();
            foreach($rowArr as $row) {
            	$result += $row['payments'];
            }
        }
        return $result;
    }
	public function getMonthPayments()
    {
    	$rowArr = array();
    	$result = 0;
        $sql = $this->select()
            ->from(array('a' => $this->getTableName()), array('payments'=>'monthstat'));                        
        $rows = $this->fetchAll($sql);
        if ($rows) {
            $rowArr = $rows->toArray();
            foreach($rowArr as $row) {
            	$result += $row['payments'];
            }
        }
        return $result;
    }

	public function setToken($userid, $token, $account)
	{
        $result = $this->update(array('token'=>$token, 'receiver'=>$account), "user_id = $userid");           

        return $result;
	}

	public function searchAction($id) 
	{
		$rowArr = array();
    	$result = 0;
        $sql = $this->select()
            ->from(array('a' => $this->getTableName()))
            ->where('id = ?', $id);   
                        
        $rows = $this->fetchRow($sql);
        //if($id==50) { var_dump($rows);exit; }     
        if ($rows) {
            foreach($rowArr as $row) {
            	$result = $row;
            }
        }
        return $result;
	}
}